name: Spring Boot CI/CD
run-name: Build and Test Spring Boot Application

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ubuntu-latest

    services:
      mysql:
        image: mysql:latest
        env:
          MYSQL_ROOT_PASSWORD: Vietnamnet.vn
          MYSQL_DATABASE: autolabel_issue
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping --silent"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=10

    steps:
      # Bước 1: Checkout source code
      - name: Checkout code
        uses: actions/checkout@v4

      # Bước 2: Cài đặt JDK 21
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      # Bước 3: Build dự án, không chạy test
      - name: Build Project (Skip Tests)
        run: mvn clean install -Dspring.profiles.active=ci -DskipTests

      # Bước 4: Chạy Tests
      - name: Run Tests
        run: mvn test -Dspring.profiles.active=ci

      # Bước 5: Package Application (Skip Tests)
      - name: Package Application
        run: mvn package -Dspring.profiles.active=ci -DskipTests

      # Bước kiểm tra file trong thư mục target
      - name: List files in target directory
        run: ls -l target/

      # Bước 6: Upload Artifact - new
      - name: Upload JAR Artifact
        uses: actions/upload-artifact@v4
        with:
          name: spring-boot-app
          path: target/*.jar
          
      # Bước 7: Deploy lên AWS EC2
      - name: Deploy to AWS EC2
        run: |
          # Thiết lập môi trường SSH
          echo "${{ secrets.AWS_PRIVATE_KEY }}" > private_key.pem
          chmod 600 private_key.pem
        
          # Thêm EC2 host key vào known_hosts để tránh lỗi Host key verification failed
          mkdir -p ~/.ssh
          ssh-keyscan -H 54.254.37.210 >> ~/.ssh/known_hosts
        
          # Kết nối với EC2 và deploy file .jar
          scp -i private_key.pem target/*.jar ec2-user@54.254.37.210:/home/ec2-user/app.jar
        
          # SSH vào EC2 và khởi động ứng dụng
          ssh -i private_key.pem ec2-user@54.254.37.210 << 'EOF'
            cd /home
            java -jar app.jar
          EOF
